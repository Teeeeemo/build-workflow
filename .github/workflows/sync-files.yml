name: sync-files

on:
  workflow_dispatch:

jobs:
  do-work:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Git Config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Do Work
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          PERSONAL_TOKEN:   ${{ secrets.PERSONAL_TOKEN }}
        run: |
          while IFS= read -r REPOSITORY; do
            CLONE_URL=$(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${REPOSITORY}" | jq -re '.clone_url')
            while IFS= read -r BRANCH; do
              echo "Checkout ${CLONE_URL}..."
              git clone -b "${BRANCH}" "${CLONE_URL}"
              cd "${REPOSITORY}" || exit 1
              ###########################################
              echo "Do Stuff!"
              #curl -fsSL https://raw.githubusercontent.com/hotio/base/jammyvpn/update-digests.sh > update-digests.sh
              rm update-digests.sh
              git add --all
              if git commit -m "FileSync Updates [skip ci]"; then
                git push
              fi
              ###########################################
              cd .. || exit 1
              rm -rf "${REPOSITORY}"
            done < <(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${REPOSITORY}/branches" | jq -re --arg branch_filter "${BRANCH_FILTER}" '.[] | select(.name=="master")) | .name')
          done < <(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/users/${REPOSITORY_OWNER}/repos?per_page=1000" | jq -re --arg repository_filter "${REPOSITORY_FILTER}" '.[] | select(.topics[]=="docker-image") | select(.name|test("\($repository_filter)")) | .name')
