name: update-digests

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 * * * *'

jobs:
  do-work:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Git Config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Do Work
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          PERSONAL_TOKEN:   ${{ secrets.PERSONAL_TOKEN }}
          DISCORD_WEBHOOK:  ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          while IFS= read -r REPOSITORY; do
            CLONE_URL=$(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${REPOSITORY}" | jq -re '.clone_url')
            while IFS= read -r BRANCH; do
              echo "Checkout ${CLONE_URL}..."
              git clone -b "${BRANCH}" "${CLONE_URL}"
              cd "${REPOSITORY}" || exit 1
              ###########################################
              [[ -f update-digests.sh ]] && bash ./update-digests.sh || true
              git add .
              if git commit -m "Upstream image update"; then
                git push
                GIT_SHA=$(git log -n 1 --pretty=format:"%H")
                json=$(jq -nc --arg     title       "${REPOSITORY_OWNER}/${repo}:${branch}" \
                              --arg     url         "https://github.com/${REPOSITORY_OWNER}/${repo}/commit/${GIT_SHA}" \
                              --arg     description "Upstream changes detected!" \
                              --argjson color       "4886754" \
                              --arg     timestamp   "$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")" \
                              '{"embeds": [
                                {
                                  "title": $title,
                                  "url": $url,
                                  "description": $description,
                                  "color": $color,
                                  "footer": {"text": "Powered by GitHub Actions"},
                                  "timestamp": $timestamp
                                }
                              ]}')
                jq <<< "${json}"
                curl -fsSL -X POST -H "Content-Type: application/json" -d "${json}" "${DISCORD_WEBHOOK}"
              fi
              ###########################################
              cd .. || exit 1
              rm -rf "${REPOSITORY}"
            done < <(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${REPOSITORY}/branches" | jq -re --arg branch_filter "${BRANCH_FILTER}" '.[] | select(.name!="master") | select(.name|test("\($branch_filter)")) | .name')
          done < <(curl --header "Authorization: Bearer ${PERSONAL_TOKEN}" -fsSL "https://api.github.com/users/${REPOSITORY_OWNER}/repos?per_page=1000" | jq -re --arg repository_filter "${REPOSITORY_FILTER}" '.[] | select(.topics[]=="docker-image") | select(.name|test("\($repository_filter)")) | .name')
