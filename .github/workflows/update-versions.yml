name: update-versions

on:
  workflow_dispatch:
  schedule:
    - cron:  '*/15 * * * *'
  repository_dispatch:
    types: [update-versions-webhook]

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Update versions
        env:
          GITHUB_OWNER: ${{ github.repository_owner }}
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          REPOSITORY: ${{ github.event.client_payload.repo }}
          BRANCH: ${{ github.event.client_payload.branch }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          while IFS= read -r repo; do
            while IFS= read -r branch; do
              echo "Updating ${REPOSITORY_OWNER}/${repo}:${branch}..."
              git clone -b "${branch}" "https://${PERSONAL_TOKEN}@github.com/${REPOSITORY_OWNER}/${repo}.git"
              cd "${repo}" || exit 1
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              [[ -f update-versions.sh ]] && bash ./update-versions.sh
              git add .
              if git commit -m "Version update: $(jq -r '.version' < VERSION.json)"; then
                git push
                GIT_SHA=$(git log -n 1 --pretty=format:"%H")
                json='{"embeds": [{"title": "Version update: $(jq -r '.version' < VERSION.json)","description": "Version changes detected for **['${REPOSITORY_OWNER}'/'${repo}':'${branch}'](https://github.com/'${REPOSITORY_OWNER}'/'${repo}'/commit/'${GIT_SHA}')**.","color": 4886754,"footer": {"text": "Powered by GitHub Actions"},"timestamp": "'$(date -u --iso-8601=seconds)'"}]}'
                curl -fsSL -X POST -H "Content-Type: application/json" -d "${json}" "${DISCORD_WEBHOOK}"
              fi
              cd .. || exit 1
              rm -rf "${repo}"
            done < <(curl -u "${REPOSITORY_OWNER}:${PERSONAL_TOKEN}" -fsSL "https://api.github.com/repos/${REPOSITORY_OWNER}/${repo}/branches" | jq -r --arg BRANCH "${BRANCH}" '.[] | select(.name!="master") | select(.name|test("\($BRANCH)")) | .name')
          done < <(curl -u "${REPOSITORY_OWNER}:${PERSONAL_TOKEN}" -fsSL "https://api.github.com/users/${REPOSITORY_OWNER}/repos?per_page=1000" | jq -r --arg REPOSITORY "${REPOSITORY}" '.[] | select(.topics[]=="docker-image") | select(.name|test("\($REPOSITORY)")) | .name')
